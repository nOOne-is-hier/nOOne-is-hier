name: Update README metrics (all repos, 30d)

on:
  schedule:
    - cron: '0 0 * * *'        # 매일 00:00 UTC
  workflow_dispatch:

jobs:
  commit-stats:
    runs-on: ubuntu-latest
    permissions: { contents: write }

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      DAYS: 30                        # 최근 N일

    steps:
    - uses: actions/checkout@v4

    # 1) 전체 레포 목록 (소유 + 기여), 포크 제외
    - name: Collect repositories
      id: repos
      run: |
        gh api user --jq .login > me.txt
        ME=$(cat me.txt)

        gh api user/repos --paginate --jq '.[] | select(.fork==false) | .full_name' > own.txt
        gh api user/repos -F type=member --paginate --jq '.[] | select(.fork==false) | .full_name' > member.txt

        sort -u own.txt member.txt > repos.txt
        echo "count=$(wc -l < repos.txt)" >> "$GITHUB_OUTPUT"

    # 2) 각 레포 기본 브랜치 & 최근 30일 커밋 시각 모으기
    - name: Aggregate commits (last ${{ env.DAYS }} days)
      run: |
        since=$(date -u -d "$DAYS days ago" '+%Y-%m-%dT%H:%M:%SZ')
        > hours.txt                    # 빈 파일 만들기

        while read repo; do
          def=$(gh api "repos/$repo" --jq .default_branch)
          gh api "repos/$repo/commits?sha=$def&since=$since&per_page=100" \
            --paginate --jq '.[].commit.author.date' >> hours.txt || true
        done < repos.txt

        # 시간대별 집계
        sort hours.txt | cut -dT -f2 | cut -d: -f1 |
        uniq -c > hourcount.txt

        {
          echo "#### 🕒 Commits in Last ${DAYS} Days by Hour (All Repos)"
          echo "| Hour | # Commits |"
          echo "|:----:|:---------:|"
          while read c h; do
            printf "| %02d:00 | %d |\n" "$h" "$c"
          done < hourcount.txt
        } > commit-hours.md

    # 3) README 주입
    - name: Inject table
      run: |
        s='<!--START_SECTION:commit_hours-->'
        e='<!--END_SECTION:commit_hours-->'
        awk -v s="$s" -v e="$e" '
          $0==s {print; while ((getline<"commit-hours.md")>0) print; skip=1; next}
          $0==e {skip=0}
          skip!=1 {print}
        ' README.md > README.tmp && mv README.tmp README.md

    # 4) 자동 커밋
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "🤖 chore: update ${DAYS}d all‑repo commit‑hour stats"
        file_pattern: README.md
