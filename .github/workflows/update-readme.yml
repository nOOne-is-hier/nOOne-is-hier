name: Update README metrics (all repos, 180d)

on:
  schedule:
    - cron: '0 0 * * *'           # Îß§Ïùº 00:00‚ÄØUTC (KST‚ÄØ09:00)
  workflow_dispatch:

jobs:
  commit-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      DAYS: 180
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
    ########################################################################
    # 0) Ï≤¥ÌÅ¨ÏïÑÏõÉ & .gitignore Î≥¥Í∞ï
    ########################################################################
    - uses: actions/checkout@v4

    - name: Ensure temp files are ignored
      run: |
        cat <<'EOF' >> .gitignore
        # added by workflow ‚Äî temp analytics
        hours.txt
        me.txt
        own.txt
        member.txt
        repos.txt
        EOF

    ########################################################################
    # 1) Python ÌôòÍ≤Ω(matplotlib) Ï§ÄÎπÑ
    ########################################################################
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install matplotlib
      run: pip install matplotlib

    ########################################################################
    # 2) Î∂ÑÏÑù ÎåÄÏÉÅ Î†àÌè¨ ÏàòÏßë
    ########################################################################
    - name: Collect repositories (owner+member, fork Ï†úÏô∏)
      run: |
        set -euo pipefail
        gh api user --jq .login > me.txt
        GH_TOKEN=$GH_TOKEN gh api "user/repos?type=owner&per_page=100" --paginate \
          --jq '.[]|select(.fork==false)|.full_name' > own.txt
        GH_TOKEN=$GH_TOKEN gh api "user/repos?type=member&per_page=100" --paginate \
          --jq '.[]|select(.fork==false)|.full_name' > member.txt
        sort -u own.txt member.txt > repos.txt

    ########################################################################
    # 3) ÏµúÍ∑º NÏùº Ïª§Î∞ã ÏãúÍ∞Å ÏàòÏßë (UTC ‚Üí KST)
    ########################################################################
    - name: Aggregate commit datetimes
      run: |
        set -euo pipefail
        since=$(date -u -d "$DAYS days ago" '+%Y-%m-%dT%H:%M:%SZ')
        > hours.txt
        while read repo; do
          def=$(GH_TOKEN=$GH_TOKEN gh api "repos/$repo" --jq .default_branch)
          GH_TOKEN=$GH_TOKEN gh api "repos/$repo/commits?sha=$def&since=$since&per_page=100" \
            --paginate --jq '.[].commit.author.date' >> hours.txt || true
        done < repos.txt

    ########################################################################
    # 4) commit‚Äëhours.png ÏÉùÏÑ± (0‚Äë23Ïãú, KST)
    ########################################################################
    - name: Build commit-hours.png
      run: |
        python <<'PY'
        import matplotlib.pyplot as plt
        from datetime import datetime, timedelta
        import os
        
        days = int(os.getenv("DAYS", 180))  # ‚Üê envÏóêÏÑú ÏßÅÏ†ë Í∞ÄÏ†∏Ïò¥
        
        hourly = [0] * 24
        with open("hours.txt") as f:
            for line in f:
                iso = line.strip()
                if not iso: continue
                dt = datetime.fromisoformat(iso.replace("Z", "+00:00"))
                kst = dt + timedelta(hours=9)
                hourly[kst.hour] += 1
        
        fig, ax = plt.subplots(figsize=(10, 4))
        ax.bar(range(24), hourly, color="#4FC3F7")
        ax.set_xticks(range(24))
        ax.set_xlabel("Hour (KST)")
        ax.set_ylabel("Commits")
        ax.set_title(f"Commits by Hour (KST, Last {days} Days)")
        plt.grid(axis="y", linestyle="--", alpha=0.4)
        plt.tight_layout()
        plt.savefig("commit-hours.png", dpi=120, bbox_inches="tight")
        PY

    # 4‚Äë1) Ïù¥ÎØ∏ÏßÄ Ï°¥Ïû¨ ÌôïÏù∏ (ÎîîÎ≤ÑÍ∑∏)
    - name: Verify image exists
      run: ls -l commit-hours.png

    ########################################################################
    # 5) README Ïóê Ïù¥ÎØ∏ÏßÄ Î∏îÎ°ù Ï£ºÏûÖ
    ########################################################################
    - name: Inject chart into README
      run: |
        ts=$(date +%s)
        new_block="<p align=\"center\">\n<img src=\"commit-hours.png?ts=$ts\" width=\"100%\" alt=\"Commits by hour (KST)\"/>\n</p>"
        awk -v nb="$new_block" '
          /<!--START_SECTION:commit_hours-->/ { print; print nb; skip=1; next }
          /<!--END_SECTION:commit_hours-->/   { skip=0; print; next }
          skip!=1 { print }
        ' README.md > README.tmp && mv README.tmp README.md

    ########################################################################
    # 6) Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ïª§Î∞ã & Ìë∏Ïãú
    ########################################################################
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "ü§ñ chore: update ${DAYS}d hourly commit stats (KST)"
        file_pattern: "README.md commit-hours.png"

    ########################################################################
    # 7) (ÏòµÏÖò) diff Ï∂úÎ†•
    ########################################################################
    - name: Show README diff
      if: always()
      run: git diff --stat README.md || echo "‚úÖ No diff"
