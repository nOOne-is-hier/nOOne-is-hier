name: Update README metrics

on:
  schedule:
    # 매일 00:00(UTC) = 09:00(KST)에 실행
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write          # README.md 푸시 권한

    steps:
      # 1) 코드 체크아웃
      - uses: actions/checkout@v4

      # 2) 최근 7일 커밋‑시간대 테이블 생성
      - name: Generate last‑7‑days hourly commit table
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}   # gh CLI 인증용
        shell: bash
        run: |
          since=$(date -u -d '7 days ago' +'%Y-%m-%dT%H:%M:%SZ')

          # 표 헤더
          {
            echo "#### 🕒 Commits in Last 7 Days by Hour"
            echo "| Hour | # Commits |"
            echo "|:----:|:---------:|"
          } > commit-hours.md

          # 시간(HH) 추출 → 카운트 → 표 행 append
          gh api repos/${{ github.repository }}/commits \
            --paginate \
            -F since="$since" \
            -F per_page=100 \
            --jq '.[].commit.author.date' |
          cut -dT -f2 | cut -d: -f1 |        # HH 추출
          sort | uniq -c |                   # 갯수 집계
          awk '{printf "| %02d:00 | %d |\n", $2, $1}' >> commit-hours.md

      # 3) README에 테이블 삽입 (START/END 마커 사이 덮어쓰기)
      - name: Inject table into README
        shell: bash
        run: |
          start='<!--START_SECTION:commit_hours-->'
          end='<!--END_SECTION:commit_hours-->'
          awk -v s="$start" -v e="$end" '
            $0==s {print; while ((getline l<"commit-hours.md")>0) print l; skip=1; next}
            $0==e {skip=0}
            skip!=1 {print}
          ' README.md > README.tmp && mv README.tmp README.md

      # 4) 변경 사항 자동 커밋
      - name: Commit updated README
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "🤖 chore: update last‑7‑day commit‑hour stats"
          file_pattern: README.md
